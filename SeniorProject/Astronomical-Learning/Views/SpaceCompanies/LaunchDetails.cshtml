@model Astronomical_Learning.Models.Launches.SingleLaunchViewModel

@{
    ViewBag.Title = "LaunchDetails";
}

<div class="container launch-details">
    <br />
    <br />
    <br />
    <h1 class="mission-name text-center" alt="Misson Name">
        @Html.DisplayFor(model => model.missName)
    </h1>
    <div>
        <div class="row">
            <div class="col-lg-2"></div>
            <div class="col-lg-4">
                <dl class="dl-horizontal">
                    <dt>
                        Flight Number
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.flightNum)
                    </dd>

                    <dt>
                        Mission ID
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.missID)
                    </dd>

                    <dt>
                        Launch Year
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.launchYear)
                    </dd>

                    <dt>
                        Launch Date (Unix)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.launchDateUnix)
                    </dd>

                    <dt>
                        Launch Date (UTC)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.launchDateUTC)
                    </dd>

                    <dt>
                        Launch Date (Local Time)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.launchDateLocal)
                    </dd>

                    <dt>
                        Tent
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.tent)
                    </dd>

                    <dt>
                        Tent Max Precise
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.tentMaxPrecise)
                    </dd>

                    <dt>
                        Crew
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.crew)
                    </dd>
                </dl>
            </div>
            <div class="col-lg-5">
                <dl class="dl-horizontal">

                    <dt>
                        Site ID
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.siteID)
                    </dd>

                    <dt>
                        Location Name
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.locLong)
                    </dd>
                </dl>
                <dl class="dl-horizontal">
                    <dt>
                        Rocket ID
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.rocketID)
                    </dd>

                    <dt>
                        Rocket Name
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.rocketName)
                    </dd>

                    <dt>
                        Rocket Type
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.rocketType)
                    </dd>
                    <dt>
                        Static fire date (UTC)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.statFireDateUTC)
                    </dd>

                    <dt>
                        Static fire date (Unix)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.statFireDateUnix)
                    </dd>
                </dl>
                <dl class="dl-horizontal">
                    <dt>
                        Launch Success
                    </dt>

                    @if (Model.launchSuccess == "True")
                    {
                        <dd class="success-text">
                            @Html.DisplayFor(model => model.launchSuccess)
                        </dd>
                    }
                    else
                    {
                        <dd class="unsuccessful-text">
                            @Html.DisplayFor(model => model.launchSuccess)
                        </dd>
                    }
                    <dt>
                        Upcoming
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.upcoming)
                    </dd>
                </dl>
            </div>
        </div>
        <hr class="light-hr" />
        <h2 class="mission-sub text-center">First Stage</h2>
        <div class="row">
            <div class="col-lg-2"></div>
            <div class="col-lg-4">
                <dl class="dl-horizontal">
                    <dt>
                        Core Serial
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.coreSerial)
                    </dd>

                    <dt>
                        Flight
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.flight)
                    </dd>

                    <dt>
                        Block
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.block)
                    </dd>

                    <dt>
                        Gridfins
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.gridfins)
                    </dd>

                    <dt>
                        Legs
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.legs)
                    </dd>

                    <dt>
                        Reused
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.reused)
                    </dd>
                </dl>
            </div>
            <div class="col-lg-4">
                <dl class="dl-horizontal">
                    <dt>
                        Landing Success
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.landSuccess)
                    </dd>

                    <dt>
                        Landing Intent
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.landIntent)
                    </dd>

                    <dt>
                        Landing Type
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.landType)
                    </dd>

                    <dt>
                        Landing Vehicle
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.landVeh)
                    </dd>
                </dl>
            </div>
        </div>
        <div class="row details-row-beg">
            <h2 class="text-center mission-sub">Second Stage</h2>
            <div class="row">
                <div class="col-lg-4"></div>
                <div class="col-lg-4">
                    <dl class="dl-horizontal">
                        <dt>
                            Block
                        </dt>

                        <dd>
                            @Html.DisplayFor(model => model.block2)
                        </dd>
                    </dl>
                </div>
                <div class="col-lg-4"></div>
            </div>
            <h2 class="text-center payloads-heading">Payloads</h2>
            @{
                int num = 0;
            }
            @foreach (var thing in Model.payloads)
            {
                if (Model.payloads.Count == 1)
                {
                    <div class="2"></div>
                    <div class="col-lg-4"></div>
                    <div class="col-lg-4">
                        <dl class="dl-horizontal">
                            <dt>
                                Payload ID
                            </dt>
                            <dd>
                                @thing.payloadID
                            </dd>
                            <dt>
                                Customers
                            </dt>
                            <dd>
                                @thing.customers
                            </dd>
                            <dt>
                                Nationality
                            </dt>
                            <dd>
                                @thing.nationality
                            </dd>
                            <dt>
                                Manufacturer
                            </dt>
                            <dd>
                                @thing.manufac
                            </dd>
                            <dt>
                                Payload Type
                            </dt>
                            <dd>
                                @thing.payloadType
                            </dd>
                            <dt>
                                Payload Mass (kg)
                            </dt>
                            <dd>
                                @thing.plmkg
                            </dd>
                            <dt>
                                Payload Mass (lb)
                            </dt>

                            <dd>
                                @thing.plmlb
                            </dd>
                        </dl>
                        <h4 class="payloads-heading text-center">Orbit Information</h4>
                        <dl class="dl-horizontal">
                            <dt>
                                Orbit
                            </dt>
                            <dd>
                                @thing.orbit.orbit
                            </dd>
                            <dt>
                                Semi Major Axis (km)
                            </dt>
                            <dd>
                                @thing.orbit.semiMajorAxisKM
                            </dd>
                            <dt>
                                Eccentricity
                            </dt>
                            <dd>
                                @thing.orbit.eccentricity
                            </dd>
                            <dt>
                                Periapsis (km)
                            </dt>
                            <dd>
                                @thing.orbit.periKm
                            </dd>
                            <dt>
                                Apoapsis (km)
                            </dt>
                            <dd>
                                @thing.orbit.apoKm
                            </dd>
                            <dt>
                                Inclination Degree
                            </dt>
                            <dd>
                                @thing.orbit.inclinDeg
                            </dd>
                            <dt>
                                Period Min
                            </dt>
                            <dd>
                                @thing.orbit.periodMin
                            </dd>
                            <dt>
                                Epoch
                            </dt>
                            <dd>
                                @thing.orbit.epoch
                            </dd>
                            <dt>
                                Mean Motion
                            </dt>
                            <dd>
                                @thing.orbit.meanMotion
                            </dd>
                            <dt>
                                raan
                            </dt>
                            <dd>
                                @thing.orbit.raan
                            </dd>
                            <dt>
                                Arg of Pericenter
                            </dt>
                            <dd>
                                @thing.orbit.argPericenter
                            </dd>
                            <dt>
                                Mean Anomoly
                            </dt>
                            <dd>
                                @thing.orbit.meanAnomoly
                            </dd>
                        </dl>
                    </div>
                }
                else
                {
                    <div class="col-lg-4">
                        <h3 class=" text-center payloads-heading">@thing.payloadID</h3>
                        <dl class="dl-horizontal">
                            <dt>
                                Customers
                            </dt>
                            <dd>
                                @thing.customers
                            </dd>
                            <dt>
                                Nationality
                            </dt>
                            <dd>
                                @thing.nationality
                            </dd>
                            <dt>
                                Manufacturer
                            </dt>
                            <dd>
                                @thing.manufac
                            </dd>
                            <dt>
                                Payload Type
                            </dt>
                            <dd>
                                @thing.payloadType
                            </dd>
                            <dt>
                                Payload Mass (kg)
                            </dt>
                            <dd>
                                @thing.plmkg
                            </dd>
                            <dt>
                                Payload Mass (lb)
                            </dt>

                            <dd>
                                @thing.plmlb
                            </dd>
                        </dl>
                        <h4 class="payloads-heading text-center">Orbit Information</h4>
                        <dl class="dl-horizontal">
                            <dt>
                                Semi Major Axis (km)
                            </dt>
                            <dd>
                                @thing.orbit.semiMajorAxisKM
                            </dd>
                            <dt>
                                Eccentricity
                            </dt>
                            <dd>
                                @thing.orbit.eccentricity
                            </dd>
                            <dt>
                                Periapsis (km)
                            </dt>
                            <dd>
                                @thing.orbit.periKm
                            </dd>
                            <dt>
                                Apoapsis (km)
                            </dt>
                            <dd>
                                @thing.orbit.apoKm
                            </dd>
                            <dt>
                                Inclination Degree
                            </dt>
                            <dd>
                                @thing.orbit.inclinDeg
                            </dd>
                            <dt>
                                Period Min
                            </dt>
                            <dd>
                                @thing.orbit.periodMin
                            </dd>
                            <dt>
                                Epoch
                            </dt>
                            <dd>
                                @thing.orbit.epoch
                            </dd>
                            <dt>
                                Mean Motion
                            </dt>
                            <dd>
                                @thing.orbit.meanMotion
                            </dd>
                            <dt>
                                raan
                            </dt>
                            <dd>
                                @thing.orbit.raan
                            </dd>
                            <dt>
                                Arg of Pericenter
                            </dt>
                            <dd>
                                @thing.orbit.argPericenter
                            </dd>
                            <dt>
                                Mean Anomoly
                            </dt>
                            <dd>
                                @thing.orbit.meanAnomoly
                            </dd>
                        </dl>
                    </div>
                    num = num + 1;
                    if ((num % 3) == 0)
                    {
                        <div class="clearfix"></div>
                    }

                }
            }
        </div>
        <div class="row details-row-end">
            <h2 class="payloads-heading text-center">Fairings</h2>
            <div class="col-lg-4"></div>
            <div class="col-lg-4">
                <dl class="dl-horizontal">
                    <dt>
                        Reused
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.fairReused)
                    </dd>
                    <dt>
                        Recovery Attempt
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.recAtt)
                    <dt>
                        Recovered
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.recovered)
                    </dd>
                </dl>
            </div>
        </div>
        <div class="row details-row blue-bkr">
            <h2 class="mission-sub text-center">Launch Details</h2>
            <div class="col-lg-1"></div>
            <div class="col-lg-10">
                <p class="launch-details-paragraph">
                    @Html.DisplayFor(model => model.details)
                </p>
            </div>
        </div>
        <div class="text-center">
            <img class="patch-image" src="@Html.DisplayFor(model => model.patch)" />
        </div>
        <br />

        <div class="row">
            <h2 class="mission-sub text-center">Timeline</h2>
            <div class="col-lg-4"></div>
            <div class="col-lg-4">
                <dl class="dl-horizontal">
                    <dt>
                        Webcast Liftoff
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.webcastLiftoff)
                    </dd>
                    @if (Model.goForPropLoading.HasValue == true)
                    {
                        <dt>
                            Go for Prop Loading
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.goForPropLoading)
                        </dd>
                        <dt>
                            RP1 Loading
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.rp1Load)
                        </dd>
                        if (Model.s1rp1load.HasValue == true)
                        {
                            <dt>
                                Stage 1 RP1 Loading
                            </dt>
                            <dd>
                                @Html.DisplayFor(model => model.s1rp1load)
                            </dd>
                        }
                        <dt>
                            Stage 1 LOX Loading
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.s1LoxLoad)
                        </dd>
                        if (Model.s2rp1load.HasValue == true)
                        {
                            <dt>
                                Stage 2 RP1 Loading
                            </dt>
                            <dd>
                                @Html.DisplayFor(model => model.s2rp1load)
                            </dd>
                        }
                        <dt>
                            Stage 2 LOX Loading
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.s2LoxLoad)
                        </dd>
                        <dt>
                            Engine Chill
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.engineChill)
                        </dd>
                        <dt>
                            Prelaunch Checks
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.prelaunchCheck)
                        </dd>
                        <dt>
                            Propellant Pressurization
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.propellantPressurization)
                        </dd>
                        <dt>
                            Go for Launch
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.goForLaunch)
                        </dd>
                        <dt>
                            Ignition
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.ignition)
                        </dd>
                        <dt class="ignition-bkr">
                            Liftoff
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.liftoff)
                        </dd>
                        if (Model.maxq.HasValue == true)
                        {
                            <dt>
                                Maxq
                            </dt>
                            <dd>
                                @Html.DisplayFor(model => model.maxq)
                            </dd>
                        }
                        if (Model.beco.HasValue == true)
                        {
                            <dt>
                                Beco
                            </dt>
                            <dd>
                                @Html.DisplayFor(model => model.beco)
                            </dd>
                        }
                        if (Model.sideSep.HasValue == true)
                        {
                            <dt>
                                Side Core Separation
                            </dt>
                            <dd>
                                @Html.DisplayFor(model => model.sideSep)
                            </dd>
                            <dt>
                                Side Core Boostback
                            </dt>
                            <dd>
                                @Html.DisplayFor(model => model.sideBoost)
                            </dd>
                        }
                        <dt>
                            Meco
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.meco)
                        </dd>
                        if (Model.stageSep.HasValue == true)
                        {
                            <dt>
                                Stage Separation
                            </dt>
                            <dd>
                                @Html.DisplayFor(model => model.stageSep)
                            </dd>
                        }
                        if (Model.centerSep.HasValue == true)
                        {
                            <dt>
                                Center Stage Separation
                            </dt>
                            <dd>
                                @Html.DisplayFor(model => model.centerSep)
                            </dd>
                        }
                        <dt>
                            Second Stage Ignition
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.secStageIgnition)
                        </dd>
                        if (Model.centerBoost.HasValue == true)
                        {
                            <dt>
                                Center Core Boostback
                            </dt>
                            <dd>
                                @Html.DisplayFor(model => model.centerBoost)
                            </dd>
                        }
                        if (Model.fairingDep.HasValue == true)
                        {
                            <dt>
                                Fairing Deploy
                            </dt>
                            <dd>
                                @Html.DisplayFor(model => model.fairingDep)
                            </dd>
                        }
                        if (Model.sideEntry.HasValue == true)
                        {
                            <dt>
                                Side Core Entry Burn
                            </dt>
                            <dd>
                                @Html.DisplayFor(model => model.sideEntry)
                            </dd>
                        }
                        if (Model.centerEntry.HasValue == true)
                        {
                            <dt>
                                Center Core Entry Burn
                            </dt>
                            <dd>
                                @Html.DisplayFor(model => model.centerEntry)
                            </dd>
                        }
                        if (Model.sideLand.HasValue == true)
                        {
                            <dt>
                                Side Core Landing
                            </dt>
                            <dd>
                                @Html.DisplayFor(model => model.sideLand)
                            </dd>
                        }
                        if (Model.centerLand.HasValue == true)
                        {
                            <dt>
                                Center Core Landing
                            </dt>
                            <dd>
                                @Html.DisplayFor(model => model.centerLand)
                            </dd>
                        }
                        if (Model.firstStageBoostBackBurn.HasValue == true)
                        {
                            <dt>
                                First Stage Boostback Burn
                            </dt>
                            <dd>
                                @Html.DisplayFor(model => model.firstStageBoostBackBurn)
                            </dd>
                        }
                        if (Model.firstStageEntryBurn.HasValue == true)
                        {
                            <dt>
                                First stage Entry Burn
                            </dt>
                            <dd>
                                @Html.DisplayFor(model => model.firstStageEntryBurn)
                            </dd>
                        }
                        if ((Model.firstStageLanding.HasValue == true) && (Model.seco1.HasValue == true))
                        {
                            if (Model.firstStageLanding.Value < Model.seco1.Value)
                            {
                                <dt>
                                    First Stage Landing
                                </dt>
                                <dd>
                                    @Html.DisplayFor(model => model.firstStageLanding)
                                </dd>
                            }
                        }
                        if (Model.seco1.HasValue == true)
                        {
                            <dt>
                                Seco 1
                            </dt>
                            <dd>
                                @Html.DisplayFor(model => model.seco1)
                            </dd>
                        }
                        if (Model.secRestart.HasValue == true)
                        {
                            <dt>
                                Second Stage Restart
                            </dt>
                            <dd>
                                @Html.DisplayFor(model => model.secRestart)
                            </dd>
                        }
                        if (Model.firstStageLandingBurn.HasValue == true)
                        {
                            <dt>
                                First Stage Landing burn
                            </dt>
                            <dd>
                                @Html.DisplayFor(model => model.firstStageLandingBurn)
                            </dd>
                        }
                        if ((Model.firstStageLanding.HasValue == true) && (Model.seco1.HasValue == true))
                        {
                            if (Model.firstStageLanding.Value >= Model.seco1.Value)
                            {
                                <dt>
                                    First Stage Landing
                                </dt>
                                <dd>
                                    @Html.DisplayFor(model => model.firstStageLanding)
                                </dd>

                            }
                        }
                        else if ((Model.firstStageLanding.HasValue == true) && (Model.seco1.HasValue == false))
                        {
                            <dt>
                                First Stage Landing
                            </dt>
                            <dd>
                                @Html.DisplayFor(model => model.firstStageLanding)
                            </dd>

                        }
                        if (Model.seco2.HasValue == true)
                        {
                            <dt>
                                Seco 2
                            </dt>
                            <dd>
                                @Html.DisplayFor(model => model.seco2)
                            </dd>
                        }
                        if (Model.dragonSeparation.HasValue == true)
                        {
                            <dt>
                                Dragon Separation
                            </dt>
                            <dd>
                                @Html.DisplayFor(model => model.dragonSeparation)
                            </dd>
                        }
                        if (Model.dragonSolarDep.HasValue == true)
                        {
                            <dt>
                                Dragon Solar Deploy
                            </dt>
                            <dd>
                                @Html.DisplayFor(model => model.dragonSolarDep)
                            </dd>
                            <dt>
                                Dragon Bay Door Deploy
                            </dt>
                            <dd>
                                @Html.DisplayFor(model => model.dragonBay)
                            </dd>
                        }
                        if (Model.payloadDep.HasValue == true)
                        {
                            <dt>
                                Payload Deploy
                            </dt>
                            <dd>
                                @Html.DisplayFor(model => model.payloadDep)
                            </dd>
                        }
                        if (Model.payDep1.HasValue == true)
                        {
                            <dt>
                                Payload 1 Deploy
                            </dt>
                            <dd>
                                @Html.DisplayFor(model => model.payDep1)
                            </dd>
                        }
                        if (Model.payDep2.HasValue == true)
                        {
                            <dt>
                                Payload 2 Deploy
                            </dt>
                            <dd>
                                @Html.DisplayFor(model => model.payDep2)
                            </dd>
                        }
                        if (Model.seco3.HasValue == true)
                        {
                            <dt>
                                Seco 3
                            </dt>
                            <dd>
                                @Html.DisplayFor(model => model.seco3)
                            </dd>
                        }
                        if (Model.seco4.HasValue == true)
                        {
                            <dt>
                                Seco 4
                            </dt>
                            <dd>
                                @Html.DisplayFor(model => model.seco4)
                            </dd>
                        }
                    }
                    <dt>

                    </dt>
                </dl>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-4"></div>
            <div class="col-lg-4">
                <h2 class="text-center payloads-heading">Ships</h2>
                @if(Model.ships.Count() > 0)
                {
                    foreach(var something in Model.ships)
                    {
                        <h4 class="payloads-heading text-center">@something</h4>
                    }
                }
                else
                {
                    <h4 class="payloads-heading text-center">None</h4>
                }
            </div>
        </div>
        <div class="row resource-row">
            <h2 class="mission-sub text-center">More Resources</h2>
            <br />
            <div class="col-lg-2 text-center">

                <h4 class="link-header">Presskit</h4>
                <a class="details-link" href="@Html.DisplayFor(model => model.presskit)">Presskit PDF</a>
            </div>
            <div class="col-lg-2 text-center">
                <h4 class="link-header">Articles</h4>
                <a class="details-link" href="@Html.DisplayFor(model => model.articleLink)">Mission Summary</a>
            </div>
            <div class="col-lg-2 text-center">
                <h4 class="link-header">Reddit</h4>
                <a class="details-link" href="@Html.DisplayFor(model => model.redditCampaign)">Campaign</a>
                <br />
                <a class="details-link" href="@Html.DisplayFor(model => model.redditLaunch)">Launch</a>
                <br />
                <a class="details-link" href="@Html.DisplayFor(model => model.redditRecovery)">Recovery</a>
                <br />
                <a class="details-link" href="@Html.DisplayFor(model => model.redditMedia)">Media</a>
            </div>
            <div class="col-lg-2 text-center">
                <h4 class="link-header">Wikipedia</h4>
                <a class="details-link" href="@Html.DisplayFor(model => model.wikipedia)">Wikipedia link</a>
            </div>
            <div class="col-lg-2 text-center">
                <h4 class="link-header">Videos</h4>
                <a class="details-link" href="@Html.DisplayFor(model => model.videoLink)">Youtube</a>
            </div>
            <div class="col-lg-2 text-center">
                <h4 class="link-header">Telemetry</h4>
                <a class="details-link" href="@Html.DisplayFor(model => model.telemetry)">Flight Club</a>
            </div>
        </div>
    </div>
</div>
